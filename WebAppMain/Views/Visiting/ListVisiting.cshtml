@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> signInManager;
@inject UserManager<ApplicationUser> UserManager
@model VisitingListVM
@{
    ViewBag.Title = "Все Посещения";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .filter-search-container {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .filter-container, .search-container {
        flex: 1;
    }

        .filter-container .form-group {
            margin-bottom: 0;
        }

        .search-container .form-group {
            margin-bottom: 0;
        }

        .filter-container .btn {
            margin-top: 0;
        }

</style>

<form method="get">
    <div class="main-button">
        <a asp-action="AddVisiting"
           style="width:auto">
            Добавить новое посещение
        </a>
    </div>
    @if (TempData.ContainsKey("ErrorMessage"))
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
</form>



<div class="page-content p-5">
    <div class="most-popular mt-0">
        <div class="filter-search-container row align-items-center">
            <div class="col-md-6 filter-container">
                <form id="filterForm" asp-controller="Visiting" asp-action="ListVisiting" method="get" class="d-flex align-items-center">
                    <div class="form-group mb-0 w-100 me-2">
                        <select style="background: #27292a; border: none; color: white;" name="constantFilter" class="form-control" id="constantFilter">
                            <option value="">All</option>
                            <option value="Подтвержден">Подтвержден</option>
                            <option value="Не подтвержден">Не подтвержден</option>
                        </select>
                    </div>
                    <button type="submit" class="btn-sm btn" style="color:white">
                        <i class="bi bi-funnel-fill"></i>
                    </button>
                    <a href="#" id="clearFilter" class="btn-sm btn" style="color:white">
                        <i class="bi bi-x-square"></i>
                    </a>
                </form>
            </div>
            <div class="col-md-6 search-container">
                <form id="searchForm" asp-controller="Visiting" asp-action="ListVisiting" method="get" class="d-flex align-items-center">
                    <div class="form-group w-100 mb-0 me-2">
                        <input style="background-color: #27292a; " type="date" name="searchString" class="form-control" placeholder="Поиск" id="searchString" />
                    </div>
                    <button type="submit" class="btn-sm btn" style="color:white">
                        <i class="bi bi-search"></i>
                    </button>
                    <a href="#" id="clearSearch" class="btn-sm btn" style="color:white">
                        <i class="bi bi-x-square"></i>
                    </a>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="page-content p-5">
    <div class="most-popular mt-0">
        <div class="card-tableNew">
            <div class="card-header">
            </div>
            <div class="row">

                @foreach (var visiting in Model.Visiting)
                {
                    <div class="col-lg-4 col-sm-6">
                        <div class="item">
                                <h5 class="card-title">Посетитель: </h5>
                                <div>
                                    <span class="text-white card-text">

                                        @if (await UserManager.IsInRoleAsync(visiting.ApplicationUser, "Гость"))
                                        {
                                            @visiting.ApplicationUser.UserName
                                        }
                                        else
                                        {
                                            @visiting.Visitor.Name
                                        }
                                    </span>
                                </div>
                                <span class="text-white card-text">Услуга: @visiting.Services.NameOfTheService</span>
                                <div>
                                    <span class="text-white card-text">Дата посещения: @visiting.DateAndTimeOfTheVisit.ToString("g")</span>
                                </div>

                                <div>
                                    <span class="text-white card-text">Количество часов: @visiting.NumberOfHours</span>
                                </div>
                                <div>
                                    <span class="text-white card-text">Стоимость: @visiting.TotalCost рублей</span>
                                </div>
                                <div>
                                    <span class="text-white card-text">@visiting.Halls.HallsName</span>
                                </div>
                                <div>
                                <span class="text-white card-text"> @visiting.Halls.Computers.FirstOrDefault(c => c.ComputerId == visiting.ComputerId)?.ComputerName</span>
                                </div>

                                <form method="post" action="@Url.Action("ChangeStatus", "Visiting")">
                                    <div class="form-row" style="margin-top: 20px;">
                                        <div class="col-md-6 mb-3">
                                            <input type="hidden" name="orderId" value="@visiting.VisitingId" />
                                        <select name="newStatus" style="background: #1f2122; border: none; color: white;" class="custom-select">
                                                <option value="Не подтвержден" selected="@(visiting.Status == "Не подтвержден")">Не подтвержден</option>
                                                <option value="Подтвержден" selected="@(visiting.Status == "Подтвержден")">Подтвержден</option>
                                            <option value="Принудительно завершен" selected="@(visiting.Status == "Принудительно завершен")">Принудительно завершен</option>
                                            </select>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                        <button type="submit" class="btn-sm btn mx-2">
                                            <i class="bi bi-pencil-square" style="color:white"></i>

                                            </button>
                                        </div>
                                    </div>
                                </form>
                                <div class="progress">
                                <div class="progress-bar timer-progress-bar" role="progressbar" style="width: 0%; --bs-progress-bar-bg: #e75e8d;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <div>
                                <span class="text-white">Осталось времени: <span class="timer" data-start-date="@visiting.DateAndTimeOfTheVisit.ToString("yyyy-MM-dd HH:mm:ss")" data-end-date="@visiting.DateAndTimeOfTheVisitEnd.ToString("yyyy-MM-dd HH:mm:ss")" data-timer-id="timer1"></span></span>
                                </div>

                            <div class="card-footer">
                                <form asp-action="Delete" asp-route-id="@visiting.VisitingId" method="post">
                                  
                                    <button type="submit" class="btn-sm btn"
                                            onclick="return confirm('Вы уверены что хотите удалить информацию о посещении?')">
                                        <i class='bi bi-trash3' style="color:white"></i>
                                    </button>
                                </form>
                            </div>
                            </div>
                         
                        </div>
                   
                }
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-md-12">
            <nav>
                <ul class="pagination">
                    @if (Model.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href="/Visiting/ListVisiting?page=@(Model.CurrentPage - 1)&amp;searchString=@Model.SearchString&amp;constantFilter=@Model.constantFilter">Previous</a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="page-item active">
                                <span class="page-link">@i</span>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link" href="/Visiting/ListVisiting?page=@i&amp;searchString=@Model.SearchString&amp;constantFilter=@Model.constantFilter">@i</a>
                            </li>
                        }
                    }
                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="/Visiting/ListVisiting?page=@(Model.CurrentPage + 1)&amp;searchString=@Model.SearchString&amp;constantFilter=@Model.constantFilter">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>


<script>
    // Функция для обновления таймера и прогресс-бара
    function updateTimerAndProgressBar(endDate, element) {
        var now = new Date().getTime();
        var distance = endDate - now;

        // Рассчитываем оставшееся время
        var days = Math.floor(distance / (1000 * 60 * 60 * 24));
        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

        // Обновляем содержимое элемента с таймером
        element.innerHTML = days + " дн. " + hours + " ч. " + minutes + " мин. " + seconds + " сек.";

        // Рассчитываем прогресс-бар
        var startDate = new Date(element.dataset.startDate).getTime();
        var totalDuration = endDate - startDate;
        var progress = 100 - (distance / totalDuration) * 100;

        // Обновляем прогресс-бар
        var progressBar = element.closest('.item').querySelector('.progress-bar');
        progressBar.style.width = progress + "%";

        // Если время истекло, обновляем содержимое элемента и прогресс-бара
        if (distance < 0) {
            element.innerHTML = "Время истекло";
            progressBar.style.width = "100%";
        }
    }

    // Обновляем все таймеры и прогресс-бары на странице
    function updateTimersAndProgressBars() {
        var timerElements = document.querySelectorAll('.timer');
        timerElements.forEach(function (element) {
            var endDateString = element.getAttribute('data-end-date');
            var endDate = new Date(endDateString).getTime();
            updateTimerAndProgressBar(endDate, element);
        });
    }

    // Вызываем функцию обновления таймеров и прогресс-баров при загрузке страницы и каждую секунду
    window.addEventListener('DOMContentLoaded', function () {
        updateTimersAndProgressBars();
        setInterval(updateTimersAndProgressBars, 1000);
    });


</script>